@page "/server-side-demo"
@using System.Threading
@using Microsoft.Extensions.Logging
@using Soenneker.Blazor.DataTables
@using Soenneker.Blazor.DataTables.Options
@using Soenneker.Blazor.DataTables.Demo.Dtos
@using Soenneker.Blazor.DataTables.Demo.Services
@using Soenneker.DataTables.Dtos.ServerResponse
@using Soenneker.DataTables.Dtos.ServerSideRequest
@inject UserService UserService
@inject ILogger<ServerSideDemo> Logger

<PageTitle>Server-Side DataTable Demo</PageTitle>

<div class="container mt-4" >
    <h1>Server-Side DataTable Demo</h1>
    <p class="lead" >This demo shows how to use the DataTable component with server-side operations.</p>

    <div class="card" >
        <div class="card-body" >
            <DataTable @ref="_dataTable"
                       OnServerSideRequest="HandleServerSideRequest"
                       Options="_tableOptions" class="table table-sm dt-responsive table-striped" style="width: 100%" >
                <thead>
                    <tr>
                        <th data-data="id" >ID</th>
                        <th data-data="name" >Name</th>
                        <th data-data="email" >Email</th>
                        <th data-data="role" >Role</th>
                        <th data-data="createdAt" >Created At</th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </DataTable>
        </div>
    </div>
</div>

@code {


    private DataTable _dataTable = null!;

    private readonly DataTableOptions _tableOptions = new()
    {
        ServerSide = true,
        PageLength = 10
    };

    private int _drawCounter = 0;

    private async Task<DataTableServerResponse> HandleServerSideRequest(DataTableServerSideRequest request)
    {
        try
        {
            _drawCounter++;

            // Convert orderColumn to column name
            string? orderBy = null;
            if (request.Order?.Count > 0)
            {
                orderBy = request.Order[0].Column switch
                {
                    0 => "id",
                    1 => "name",
                    2 => "email",
                    3 => "role",
                    4 => "createdAt",
                    _ => null
                };
            }

            // Calculate page number from start and length
            int pageNumber = (request.Start / request.Length) + 1;
            int pageSize = request.Length;
            string? searchTerm = request.Search?.Value;
            string? orderDirection = request.Order?.Count > 0 ? request.Order[0].Dir : null;

            (List<UserDto> data, int totalRecords, int totalFilteredRecords) = await UserService.GetUsers(pageNumber, pageSize, orderBy, orderDirection, searchTerm, CancellationToken.None);

            return DataTableServerResponse.Success(_drawCounter, totalRecords, totalFilteredRecords, data);
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "Error processing server-side request");
            return DataTableServerResponse.Fail(_drawCounter, "An error occurred while processing your request. Please try again later.");
        }
    }

}
