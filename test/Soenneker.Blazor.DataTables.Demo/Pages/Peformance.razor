@page "/performance"
@using Microsoft.Extensions.Logging
@using Soenneker.Blazor.DataTables.Demo.Dtos
@using Soenneker.Blazor.DataTables.Options

@inject ILogger<Index> Logger

<img src="https://user-images.githubusercontent.com/4441470/224455560-91ed3ee7-f510-4041-a8d2-3fc093025112.png" />
<h1>Soenneker.Blazor.DataTables demo</h1>
<p>This page demonstrates some of the uses of the DataTables component.</p>

<DataTable Options="_options">
        <thead>
            <tr>
                <th>Name</th>
                <th>Position</th>
                <th>Office</th>
                <th>Age</th>
                <th>Start date</th>
                <th>Salary</th>
                <th>Link</th>
            </tr>
        </thead>
        <tbody>
            @foreach (Employee employee in _employees)
            {
                <tr>
                    <td>@employee.Name</td>
                    <td>@employee.Position</td>
                    <td>@employee.City</td>
                    <td>@employee.Age</td>
                    <td>@employee.StartDate</td>
                    <td>@employee.Salary</td>
                    <td>
                        <Anchor To=@("/")>Link</Anchor>
                    </td>
                </tr>
            }
        </tbody>
</DataTable>

<br />

<NavLink href="/" >Go to first page</NavLink>
<hr />

@code
{

    DataTableOptions _options;

    readonly List<Employee> _employees = [];

    private DataTable _dataTable = null!;

    private bool _render = true;
    private bool _renderData = true;

    protected override void OnInitialized()
    {
        for (var i = 0; i < 500; i++)
        {
            _employees.Add(new Employee { Name = "John Doe", Position = "Developer", City = "London", Age = 28, StartDate = DateTime.UtcNow, Salary = 320800 });
        }

        _options = new DataTableOptions
        {
            Dom = "Bfrtip",
            Searching = true,
            LengthChange = false,
            Info = false,
            Paging = false,
            Order = [new object[] {0, "asc"}],
            OrderMulti = true
        };
    }

    protected override async Task OnInitializedAsync()
    {
    }

    private async Task OpenModal()
    {
    }

    private void OnDataTableInitialized()
    {
        Logger.LogInformation("OnInitialized called");
    }

    private void ClearViaData()
    {
    }

    private void Render()
    {
        _render = !_render;
    }

    private void RenderData()
    {
        _renderData = !_renderData;
    }

}
